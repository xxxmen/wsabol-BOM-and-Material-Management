VERSION 5.00
Begin {C62A69F0-16DC-11CE-9E98-00AA00574A4F} FolderOptions 
   Caption         =   "Folder Options"
   ClientHeight    =   3975
   ClientLeft      =   45
   ClientTop       =   375
   ClientWidth     =   6000
   OleObjectBlob   =   "FolderOptions.frx":0000
End
Attribute VB_Name = "FolderOptions"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' User Form: FolderOptions                                   '
'                                                            '
' Subdirectories for the files generated by this application '
' are definied as variables. The User uses this form to edit '
' those subfolders. The sub directories are defined relative '
' the directory in which the application is stored.          '
'                                                            '
' Note: \..\ goes to the parent directory.                   '
'                                                            '
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Option Explicit

Public Sub LoadForm()
'Subroutine: LoadForm - Controls the .Show routine for this form. Sets current subdirectories, sets position on the screen, etc.


    RFP_TextBox.Value = VB_VAR_STORE.GetRFPDirectory()
    ClientSummary_TextBox.Value = VB_VAR_STORE.GetClientSummaryDirectory()
    SiteBOM_TextBox.Value = VB_VAR_STORE.GetSiteBOMDirectory()
    MDR_TextBox.Value = VB_VAR_STORE.GetMDRDirectory()
    DeletedRFP_TextBox.Value = VB_VAR_STORE.GetDeletedRFPDirectory()
    
    'set position on screen
    Me.Top = Application.Top + Application.height / 2 - Me.height / 2
    Me.Left = Application.Left + Application.Width / 2 - Me.Width / 2
    Me.Show
End Sub

Private Sub OKButton_Click()
'Subroutine: OKButton_Click - UserForm event handler. Called when user clicks OKButton.
'                             Assigns subfolder values to those in the text fields.

    ' RFP
    If Left(RFP_TextBox.Value, 1) <> "\" Then
        RFP_TextBox.Value = "\" & RFP_TextBox.Value
    End If
    If Right(RFP_TextBox.Value, 1) <> "\" Then
        RFP_TextBox.Value = RFP_TextBox.Value & "\"
    End If
    
    If IsValidDirectory(RFP_TextBox.Value) Then
        VB_VAR_STORE.SetRFPDirectory RFP_TextBox.Value
    Else
        'error
        MsgBox "What you entered for the RFP Directory is not valid. Try Again.", vbCritical
        Exit Sub
    End If
    
    ' Client Summary
    If Left(ClientSummary_TextBox.Value, 1) <> "\" Then
        ClientSummary_TextBox.Value = "\" & ClientSummary_TextBox.Value
    End If
    If Right(ClientSummary_TextBox.Value, 1) <> "\" Then
        ClientSummary_TextBox.Value = ClientSummary_TextBox.Value & "\"
    End If
    
    If IsValidDirectory(ClientSummary_TextBox.Value) Then
        VB_VAR_STORE.SetClientSummaryDirectory ClientSummary_TextBox.Value
    Else
        'error
        MsgBox "What you entered for the Client Summary Directory is not valid. Try Again.", vbCritical
        Exit Sub
    End If
    
    ' SiteBOM
    If Left(SiteBOM_TextBox.Value, 1) <> "\" Then
        SiteBOM_TextBox.Value = "\" & SiteBOM_TextBox.Value
    End If
    If Right(SiteBOM_TextBox.Value, 1) <> "\" Then
        SiteBOM_TextBox.Value = SiteBOM_TextBox.Value & "\"
    End If
    
    If IsValidDirectory(SiteBOM_TextBox.Value) Then
        VB_VAR_STORE.SetSiteBOMDirectory SiteBOM_TextBox.Value
    Else
        'error
        MsgBox "What you entered for the Site BOM Directory is not valid. Try Again.", vbCritical
        Exit Sub
    End If
    
    ' MDR
    'If Left(MDR_TextBox.Value, 1) <> "\" Then
    '    MDR_TextBox.Value = "\" & MDR_TextBox.Value
    'End If
    'If Right(MDR_TextBox.Value, 1) <> "\" Then
    '    MDR_TextBox.Value = MDR_TextBox.Value & "\"
    'End If
    
    'If IsValidDirectory(MDR_TextBox.Value) Then
    '    VB_VAR_STORE.SetMDRDirectory MDR_TextBox.Value
    'Else
    '    'error
    '    MsgBox "What you entered for the Model Discrepancy Report Directory is not valid. Try Again.", vbCritical
    '    Exit Sub
    'End If
    
    ' Deleted RFP
    If Left(DeletedRFP_TextBox.Value, 1) <> "\" Then
        DeletedRFP_TextBox.Value = "\" & DeletedRFP_TextBox.Value
    End If
    If Right(DeletedRFP_TextBox.Value, 1) <> "\" Then
        DeletedRFP_TextBox.Value = DeletedRFP_TextBox.Value & "\"
    End If
    
    If IsValidDirectory(DeletedRFP_TextBox.Value) Then
        VB_VAR_STORE.SetDeletedRFPDirectory DeletedRFP_TextBox.Value
    Else
        'error
        MsgBox "What you entered for the Deleted RFP Directory is not valid. Try Again.", vbCritical
        Exit Sub
    End If
    
    Unload Me
End Sub

Private Sub CancelButton_Click()
'Subroutine: CancelButton_Click - UserForm event handler. Called when user clicks CancelButton.

    Unload Me
End Sub

Private Sub RFPBrowse_Click()
'Subroutine: RFPBrowse_Click - UserForm event handler. Called when user clicks RFPBrowse.

    If IsValidDirectory(RFP_TextBox.Value) Then
        SetDirectory BrowseForFolder(ThisWorkbook.Path & RFP_TextBox.Value), RFP_TextBox
    Else
        SetDirectory BrowseForFolder(ThisWorkbook.Path), RFP_TextBox
    End If
End Sub

Private Sub UnRFPBrowse_Click()
'Subroutine: UnRFPBrowse_Click - UserForm event handler. Called when user clicks UnRFPBrowse.

    If IsValidDirectory(DeletedRFP_TextBox.Value) Then
        SetDirectory BrowseForFolder(ThisWorkbook.Path & DeletedRFP_TextBox.Value), DeletedRFP_TextBox
    Else
        SetDirectory BrowseForFolder(ThisWorkbook.Path), DeletedRFP_TextBox
    End If
End Sub

Private Sub BOMBrowse_Click()
'Subroutine: BOMBrowse_Click - UserForm event handler. Called when user clicks BOMBrowse.

    If IsValidDirectory(SiteBOM_TextBox.Value) Then
        SetDirectory BrowseForFolder(ThisWorkbook.Path & SiteBOM_TextBox.Value), SiteBOM_TextBox
    Else
        SetDirectory BrowseForFolder(ThisWorkbook.Path), SiteBOM_TextBox
    End If
End Sub

Private Sub CSBrowse_Click()
'Subroutine: CSBrowse_Click - UserForm event handler. Called when user clicks CSBrowse.

    If IsValidDirectory(ClientSummary_TextBox.Value) Then
        SetDirectory BrowseForFolder(ThisWorkbook.Path & ClientSummary_TextBox.Value), ClientSummary_TextBox
    Else
        SetDirectory BrowseForFolder(ThisWorkbook.Path), ClientSummary_TextBox
    End If
End Sub

Private Sub MDRBrowse_Click()
'Subroutine: MDRBrowse_Click - UserForm event handler. Called when user clicks MDRBrowse.

    If IsValidDirectory(MDR_TextBox.Value) Then
        SetDirectory BrowseForFolder(ThisWorkbook.Path & MDR_TextBox.Value), MDR_TextBox
    Else
        SetDirectory BrowseForFolder(ThisWorkbook.Path), MDR_TextBox
    End If
End Sub

Private Sub SetDirectory(ByVal full_path As String, text_box As MSForms.TextBox)
'Subroutine: SetDirectory - Set the directory text box value based on the output from BrowseForFolder
'Arguments: full_path - String containing the output from BrowseForFolder: the full path of the folder selected
'           text_box - TextBox object pointing to the corresponding textbox to set the directory to.

    Dim Path As String
    Path = GetRelativeFolderPath(full_path)
    If Len(Path) > 0 Then
        text_box.Value = GetRelativeFolderPath(full_path)
    End If
End Sub
